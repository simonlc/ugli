# This is the core Meteor users collection, so we don't touch its global fields.
# Instead, we modify members of the fields subdocument:
#   fields.active: bool
#   fields.heartbeat: ts
#   fields.room_ids: [room _ids]

class @Users extends @Collection
  @collection = Meteor.users
  @fields = [
    'fields.active',
    'fields.heartbeat',
    'fields.room_ids',
  ]
  # This table is generated by Meteor and comes with a unique index on username.
  if Meteor.isServer
    @collection._ensureIndex 'fields.active', sparse: true

  # Compute a list of fields to publish. We shouldn't broadcast passwords!
  # We also shouldn't broadcast heartbeats because they cause unneeded updates.
  @public_fields = username: 1
  for field in @fields
    if field not in ['fields.active', 'fields.heartbeat']
      @public_fields[field] = 1

  @publish: (user_id) ->
    @find({'fields.active': true}, fields: @public_fields)

  @heartbeat = (user_id) ->
    @update({_id: user_id},
      $set: {
        'fields.heartbeat': new Date().getTime(),
        'fields.active': true,
      },
    )

  @mark_idle_users = (timeout) ->
    idle_time = new Date().getTime() - timeout
    @update({'fields.heartbeat': $lt: idle_time},
      $set: 'fields.active': false,
    )
